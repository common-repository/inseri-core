(()=>{"use strict";let e={},o=[];const a=[],s=async function(){}.constructor;!function(){const e={...console};["error","info","log","trace","warn"].forEach((o=>{console[o]=function(...s){a.push(...s),e[o](...s)}}))}(),postMessage({type:"STATUS",payload:"ready"}),onmessage=({data:t})=>{"RUN_CODE"===t.type&&async function(t){try{a.splice(0,a.length),postMessage({type:"STATUS",payload:"in-progress"});const n=Object.keys(e).reduce(((e,o)=>e+`var ${o} = inputs['${o}'] ;\n`),""),r="return { "+o.reduce(((e,o)=>e+` ${o},`),"")+" }",p=await s("inputs",n+t+"\n"+r)(e);postMessage({type:"SET_RESULTS",payload:p})}catch(e){const o=e instanceof Error?e.message:"unknown error ocurred";a.push(o)}finally{postMessage({type:"SET_STD_STREAM",payload:a.filter(Boolean).join("\n")}),postMessage({type:"STATUS",payload:"ready"})}}(t.payload),"SET_INPUTS"===t.type&&(e=t.payload),"SET_OUTPUTS"===t.type&&(o=t.payload)}})();